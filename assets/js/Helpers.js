"use strict";class MixedAudioRecorder{constructor(i=!0){this.useGainNode=i,this.gainNode=null,this.audioSources=[],this.audioDestination=null,this.audioContext=this.createAudioContext()}createAudioContext(){if(window.AudioContext)return new AudioContext;if(window.webkitAudioContext)return new webkitAudioContext;if(window.mozAudioContext)return new mozAudioContext;throw Error("Web Audio API is not supported in this browser")}getMixedAudioStream(i){return this.audioSources=[],this.useGainNode&&(this.gainNode=this.audioContext.createGain(),this.gainNode.connect(this.audioContext.destination),this.gainNode.gain.value=0),i.forEach(i=>{if(!i||!i.getTracks().filter(i=>"audio"===i.kind).length)return;let t=this.audioContext.createMediaStreamSource(i);this.useGainNode&&t.connect(this.gainNode),this.audioSources.push(t)}),this.audioDestination=this.audioContext.createMediaStreamDestination(),this.audioSources.forEach(i=>{i.connect(this.audioDestination)}),this.audioDestination.stream}stopMixedAudioStream(){this.useGainNode&&(this.gainNode.disconnect(),this.gainNode=null),this.audioSources.length&&(this.audioSources.forEach(i=>{i.disconnect()}),this.audioSources=[]),this.audioDestination&&(this.audioDestination.disconnect(),this.audioDestination=null),this.audioContext&&(this.audioContext.close(),this.audioContext=null)}}